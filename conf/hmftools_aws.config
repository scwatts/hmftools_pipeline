process {
  withName: 'AMBER' {
    ext.jarPath = '/opt/hmftools/amber.jar'
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
    ]
  }

  withName: 'COBALT' {
    ext.jarPath = '/opt/hmftools/cobalt.jar'
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
    ]
  }

  withName: 'CUSTOM_DUMPSOFTWAREVERSIONS' {
    publishDir = [
      path: { "${params.outdir}/pipeline_info" },
      mode: params.publish_dir_mode,
      pattern: '*_versions.yml',
    ]
  }

  withName: '.*:GRIDSS:.*' {
    ext.jarPath = '/opt/gridss/gridss.jar'
  }

  withName: '.*:GRIDSS:ANNOTATE' {
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      // NOTE(SW): java.io.File and Nextflow's file do not work here, resorting to string splitting
      saveAs: { filename ->
        if(filename.equals('versions.yml')) {
          return null
        } else {
          def tokens = filename.split('[/]')
          return "gridss/${meta.subject_name}_${tokens[-1]}"
        }
      }
    ]
  }

  withName: 'GRIPSS.*' {
    ext.jarPath = '/opt/hmftools/gripss.jar'
  }

  withName: '.*GRIPSS_GERMLINE' {
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "gripss_germline/${filename}" },
    ]
  }

  withName: '.*GRIPSS_GERMLINE' {
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "gripss_somatic/${filename}" },
    ]
  }

  withName: 'LILAC_PROCESS' {
    ext.jarPath = '/opt/hmftools/lilac.jar'
  }

  withName: '.*LINX:.*' {
    ext.jarPath = '/opt/hmftools/linx.jar'
  }

  withName: '.*LINX_GERMLINE' {
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : 'linx/annotations_germline/' },
    ]
  }

  withName: '.*LINX_SOMATIC' {
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : 'linx/annotations_somatic/' },
    ]
  }

  withName: '.*LINX:VISUALISER' {
    ext.path_circos = 'circos'
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : 'linx/plots_somatic/' },
    ]
  }

  withName: 'LINX_REPORT' {
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
    ]
  }

  withName: 'PAVE.*' {
    ext.jarPath = '/opt/hmftools/pave.jar'
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "pave/${filename}" },
    ]
  }

  withName: 'PURPLE' {
    ext.jarPath = '/opt/hmftools/purple.jar'
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
    ]
  }

  withName: 'SAGE.*' {
    ext.jarPath = '/opt/hmftools/sage.jar'
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "sage/${filename}" },
    ]
  }

  withName: 'TEAL' {
    ext.jarPath = '/opt/hmftools/teal.jar'
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
    ]
  }
}
